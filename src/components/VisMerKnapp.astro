---
import Icon from './icons/Icon.astro';

interface Props {
	visMerTekst?: string;
	visMindreTekst?: string;
	targetSelector?: string;
}

const {
	visMerTekst = 'Vis mer',
	visMindreTekst = 'Vis mindre',
	targetSelector = '.skjult-element',
} = Astro.props;
---

<div class="vis-mer-container">
	<button
		class="vis-mer-knapp subtle"
		type="button"
		data-target-selector={targetSelector}
	>
		<Icon name="chevron-down" width={16} height={16} class="pil-ikon" />
		<span class="knapp-tekst vis-mer-tekst">{visMerTekst}</span>
		<span class="knapp-tekst vis-mindre-tekst" style="display: none;"
			>{visMindreTekst}</span
		>
	</button>
</div>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		const buttons = document.querySelectorAll('.vis-mer-knapp');

		buttons.forEach((button) => {
			button.addEventListener('click', function () {
				const pilIkon = button.querySelector('.pil-ikon');
				const visMerTekst = button.querySelector(
					'.vis-mer-tekst'
				) as HTMLElement;
				const visMindreTekst = button.querySelector(
					'.vis-mindre-tekst'
				) as HTMLElement;
				const targetSelector =
					button.getAttribute('data-target-selector') || '.skjult-element';

				pilIkon?.classList.toggle('rotert');

				if (visMerTekst && visMindreTekst) {
					if (visMerTekst.style.display === 'none') {
						visMerTekst.style.display = '';
						visMindreTekst.style.display = 'none';
					} else {
						visMerTekst.style.display = 'none';
						visMindreTekst.style.display = '';
					}
				}

				const container = button.closest(
					'[data-vis-mer-container]'
				) as HTMLElement;
				if (container) {
					const elementerÅToggle = container.querySelectorAll(
						targetSelector
					) as NodeListOf<HTMLElement>;

					elementerÅToggle.forEach((element) => {
						if (element.style.display === 'none') {
							element.style.display = '';
						} else {
							element.style.display = 'none';
						}
					});
				}
			});
		});
	});
</script>

<style>
	@import './VisMerKnapp.css';
</style>
